/*
 * Copyright 2010-2022 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package kotlin.wasm.internal

@Suppress("unused") // references could be presented in a code generated by the compiler
internal fun getKotlinException(v: JsAny?): Throwable {
    return (v as? JsError)?.kotlinException?.get() ?: JsException(v)
}

@Suppress("unused") // references could be presented in a code generated by the compiler
internal fun throwValue(t: Throwable): Nothing {
    throw0(if (t is JsException) t.thrownValue else t.jsError)
}

@ExcludedFromCodegen
internal fun throw0(v: JsAny?): Nothing = implementedAsIntrinsic
